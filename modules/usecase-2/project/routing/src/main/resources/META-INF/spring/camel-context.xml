<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi
       http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/cxf
       http://camel.apache.org/schema/cxf/camel-cxf-spring.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">

    <cxf:cxfEndpoint id="customerWebService" address="http://localhost:9090/ws/customerService"
                     serviceClass="org.fuse.usecase.service.CustomerWS"
                     loggingFeatureEnabled="true">
    </cxf:cxfEndpoint>

    <cxf:rsServer id="customerRestService" address="http://localhost:9191/rest"
                  serviceClass="org.fuse.usecase.service.CustomerRest"
                  loggingFeatureEnabled="false">
        <cxf:providers>
            <ref bean="jsonProvider"/>
        </cxf:providers>
    </cxf:rsServer>

    <cxf:rsClient id="customerRestServiceClient" address="http://localhost:9191/rest"
                  loggingFeatureEnabled="true" serviceClass="org.fuse.usecase.service.CustomerRest">
        <cxf:providers>
            <ref bean="jsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>

    <bean id="reconcileData" class="org.fuse.usecase.AccountAggregator"/>
    <bean id="customerWSImplBean" class="org.fuse.usecase.service.CustomerWSImpl"/>
    <bean id="customerRestImplBean" class="org.fuse.usecase.service.CustomerRestImpl"/>

    <!--  THIS PROVIDER DOESN'T WORK & RETURN ERROR 415 Unsupported Media Type
      It can't also handle the Body : No message body reader has been found for
      class CXF_Test.cxf_test.Book, ContentType: application/json
      <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider"/>
    -->
    <bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider"/>

    <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="fabric8/route.properties"/>
        <!--
             Transformation Endpoint doing csv2java conversion
             Step 1 : csv record is converted java using camel bindy
             Step 2 : Dozer transformation of Customer to Account
             Step 3 : Java to Json conversion using json jackson
        -->
        <endpoint
                uri="dozer:csv2json?sourceModel=org.acme.Customer&amp;targetModel=org.globex.Account&amp;marshalId=json&amp;unmarshalId=csv&amp;mappingFile=transformation.xml"
                id="csv2json"/>

        <!-- CSV Input & JSon OutPut DataFormat -->
        <dataFormats>
            <bindy id="csv" type="Csv" classType="org.acme.Customer"/>
            <json id="json" library="Jackson"/>
        </dataFormats>

        <!-- Route Definition CSV to JSON -->
        <route>
            <!-- Consume files from input directory -->
            <from uri="file:{{fileInput}}?fileName=customers.csv&amp;noop=true"/>
            <onException>
                <exception>java.lang.IllegalArgumentException</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <to uri="file:{{fileError}}?fileName=csv-record-${date:now:yyyyMMdd}.txt"/>
            </onException>
            <split>
                <tokenize token="\n"/>
                <to ref="csv2json"/>
                <to uri="file:{{fileOutput}}?fileName=account-${property.CamelSplitIndex}.json"/>
            </split>
        </route>

        <!-- -->
        <route>
            <from uri="file:{{fileOutput}}"/>
            <convertBodyTo type="String"/>
            <unmarshal>
                <json library="Jackson" unmarshalTypeName="org.globex.Account"/>
            </unmarshal>
            <!-- <enrich strategyRef="reconcileData" uri="direct://callRestEndpoint"/>-->
            <!--
            <to uri="direct://callRestEndpoint"/>
            -->
            <setHeader headerName="Content-Type">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="Accept">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant>
            </setHeader>
            <setHeader headerName="CamelHttpPath">
                <constant>/customerservice/enrich</constant>
            </setHeader>
            <setHeader headerName="CamelCxfRsUsingHttpAPI">
                <constant>true</constant>
            </setHeader>
            <to uri="cxfrs:bean:customerRestServiceClient"/>

            <log message=">> REST IN result : ${in.body.company.name}, ${in.body.company.geo}"/>
            <log message=">> REST OUT result : ${out.body}"/>
            <!--
            <to uri="direct://callWSEndpoint"/>
            <bean beanType="org.fuse.usecase.ProcessorBean" method="process"/>
            ${body.clientId}, ${body.salesRepresentative},
            -->

            <!--<log loggingLevel="INFO"
                 message=">> Aggregated result : ${body.company.name}, ${body.company.geo}, ${body.company.active}, ${body.contact.firstName}, ${body.contact.lastName},${body.contact.streetAddr}, ${body.contact.city}, ${body.contact.state}, ${body.contact.zip}, ${body.contact.phone}"/>
            -->
        </route>

        <!-- REST Service -->
        <route>
            <from uri="cxfrs:bean:customerRestService"/>
            <transform>
                <method ref="customerRestImplBean" method="enrich"/>
            </transform>
            <!-- <bean ref="customerRestImplBean" method="enrich"/> -->
        </route>

        <!-- WebService -->
        <route>
            <from uri="cxf:bean:customerWebService"/>
            <bean ref="customerWSImplBean" method="updateAccount"/>
        </route>

        <!-- Call WebService Client -->
        <route>
            <from uri="direct://callWSEndpoint"/>
            <to uri="cxf:bean:customerWebService"/>
            <log loggingLevel="INFO"
                 message=">> WebService Response : ${body[0].id}, ${body[0].salesContact}, ${body[0].company.geo}, ${body[0].contact.firstName}, ${body[0].contact.lastName} "/>
        </route>

        <!-- Call REST Client -->
        <route>
            <from uri="direct://callRestEndpoint"/>
            <onException>
                <exception>java.lang.Exception</exception>
                <redeliveryPolicy maximumRedeliveries="1"/>
                <handled>
                    <constant>true</constant>
                </handled>
            </onException>
            <setHeader headerName="Content-Type">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="Accept">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant>
            </setHeader>
            <setHeader headerName="CamelHttpPath">
                <constant>/customerservice/enrich</constant>
            </setHeader>
            <setHeader headerName="CamelCxfRsUsingHttpAPI">
                <constant>true</constant>
            </setHeader>
            <to uri="cxfrs:bean:customerRestServiceClient"/>
            <!--            <unmarshal>
                            <json library="Jackson" unmarshalTypeName="org.globex.Account"/>
                        </unmarshal>-->
        </route>

    </camelContext>
</beans>